//==================================================================
// 《剑指Offer》代码
//==================================================================

// 面试题21：调整数组顺序使奇数位于偶数前面
// 题目：输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有
// 奇数位于数组的前半部分，所有偶数位于数组的后半部分。

#include <iostream>
using namespace std;

//*****************************************************************************************//
//-------------------------------------判断标准函数----------------------------------------//
//*****************************************************************************************//
bool isEven(int a)
{
	return a & 1;		//整数a和1按位&，若值为1则a为奇数；若值为0则a为偶数
}

//*****************************************************************************************//
//-------------------------数组重新排序函数（奇数在前，偶数在后）--------------------------//
//输入：p_Data（输入数组），length（输入数组大小），(*func)(int)（判断标准函数）
//*****************************************************************************************//
void ReorderArray(int* p_Data, int length, bool (*func)(int))
{
	if (p_Data == nullptr || length == 0)		//非法输入
	{
		cout << "非法输入：空数组" << endl;
		return;
	}

	int p_low = 0, p_high = length - 1;			//维护两个指针：p_low初始化时指向第一个数字，只能向后移动
												//p_high初始化时指向最后一个数字，只能向前移动

	while (p_low < p_high)						//循环直到两指针p_low和p_high相遇
	{
		while ((*func)(p_Data[p_low]))			//此while循环退出时，p_low指向左边第一个偶数
		{
			p_low++;
			if (p_low >= p_high)				//若到达结束条件，直接退出函数
				return;
		}
		while (!(*func)(p_Data[p_high]))		//此while循环退出时，p_high指向右边第一个奇数
		{
			p_high--;
			if (p_low >= p_high)				//若到达结束条件，直接退出函数
				return;
		}
		cout << "交换 " << p_Data[p_low] << " 和 " << p_Data[p_high] << endl;
		swap(p_Data[p_high], p_Data[p_low]);	//交换 p_low指向的偶数 和 p_high指向的奇数
	}
}

//*****************************************************************************************//
//--------------------------------------打印数组函数---------------------------------------//
//输入：p_Data（输入数组），length（输入数组大小）
//*****************************************************************************************//
void PrintArray(int* p_Data, int length)		
{
	for (int i = 0; i < length; i++)
	{
		cout << p_Data[i] << "\t";
	}
}

//*****************************************************************************************//
//-----------------------------------------主函数------------------------------------------//
//*****************************************************************************************//
int main()
{
	//------------------------测试用例1：奇数偶数交替出现-----------------------------//
	/*int array[7] = { 1,2,3,4,5,6,7 };
	int length = 7;*/

	//------------------------测试用例2：偶数都在奇数前面-----------------------------//
	int array[7] = { 2,4,6,1,3,5,7 };
	int length = 7;

	//------------------------测试用例3：奇数都在偶数前面-----------------------------//
	/*int array[7] = { 1,3,5,7,2,4,6 };
	int length = 7;*/

	//--------------------------测试用例4：数据为空指针-------------------------------//
	/*int * array = nullptr;
	int length = 0;*/

	cout << "原始数组为："<< endl;
	PrintArray(array, length);
	cout << endl;

	ReorderArray(array, length, isEven);

	cout << "调整后的数组为：" << endl;
	PrintArray(array, length);
	cout << endl;
}