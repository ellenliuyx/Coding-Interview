//==================================================================
// 《剑指Offer》代码
//==================================================================

// 面试题20：表示数值的字符串
// 题目：请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。例如，
// 字符串“+100”、“5e2”、“-123”、“3.1416”及“-1E-16”都表示数值，但“12e”、
// “1a3.14”、“1.2.3”、“+-5”及“12e+5.4”都不是

#include <iostream>
using namespace std;

//*************************************************************************************//
//-----------------------------------扫描无符号整数------------------------------------//
//输入：字符串指针的地址（可以通过形参修改该字符串指针）
//返回值：是否扫描到无符号整数
//*************************************************************************************//
bool ScanUnsignedInt(const char** str)
{
	const char* before = *str;				//记录下第一个可能出现数字字符的地址
	while (**str >= '0' && **str <= '9')	//遍历所有连续的数字字符
		(*str)++;

	return *str > before;					//若最后一个出现数字字符的地址大于before，说明扫描到无符号整数
}

//*************************************************************************************//
//--------------------------------------扫描整数---------------------------------------//
//输入：字符串指针的地址（可以通过形参修改该字符串指针）
//返回值：是否扫描到整数
//*************************************************************************************//
bool ScanInt(const char** str)
{
	if (**str == '+' || **str == '-')	//如果当前字符串指针处的字符为'+'或'-'，字符串指针后移一位
	{
		(*str)++;
	}
	return ScanUnsignedInt(str);		//在符号位后扫描无符号整数
}

//*************************************************************************************//
//------------------------------判断字符串表示的是否是数值-----------------------------//
//输入：字符串指针
//返回值：是否表示数值
//*************************************************************************************//
bool IsNumber(const char* str)
{
	if (str == nullptr)
	{
		cout << "非法输入（空字符串）" << endl;
		return false;
	}

	bool numeric;		//此标志为用于描述当前位置之前的所有字符是否表示数值

	numeric = ScanInt(&str);	//先扫描字符串一开始是否有数值

	if (*str == '.')					//若当前位置字符为'.'
	{
		str++;					//跳过'.'，字符串指针后移一位

		//继续扫描小数点之后是否有无符号整数
		//小数点前后可以都有数字，也可以只有一侧有数字，所以此处用'||'
		numeric = ScanUnsignedInt(&str) || numeric;		
	}
	if (*str == 'E' || *str == 'e')		//若当前位置字符为'E'或'e'
	{
		str++;					//跳过'E'或'e'，字符串指针后移一位

		//继续扫描'E'或'e'之后是否有整数
		//'E'或'e'前后必须都有数字，所以此处用'&&'
		numeric = ScanInt(&str) && numeric ;
	}
	return *str == '\0' && numeric;		//整个字符串遍历完且全部字符表示数值时，返回ture
}

//*************************************************************************************//
//-----------------------------------打印判断结果函数----------------------------------//
//输入：字符串指针
//*************************************************************************************//
void PrintResult(const char* str)
{
	if (str == nullptr)
	{
		cout << "非法输入（空字符串）" << endl;
		return;
	}
		
	cout << str << "\t";

	if (IsNumber(str))
		cout << "该字符串 表示 数值" << endl;
	else 
		cout << "该字符串 不表示 数值" << endl;
}

//*************************************************************************************//
//----------------------------------------主函数---------------------------------------//
//*************************************************************************************//
int main()
{
	char* str0 = nullptr;
	PrintResult(str0);

	//-------------以下测试用例表示数值-----------------//
	const char* str1 = "-123.45e+6";
	PrintResult(str1);
	 
	const char* str2 = "+100";
	PrintResult(str2);

	const char* str3 = "5e2";
	PrintResult(str3);

	const char* str4 = "-123";
	PrintResult(str4);

	const char* str5 = "3.1416";
	PrintResult(str5);

	const char* str6 = "-1E-16";
	PrintResult(str6);

	//-------------以下测试用例不表示数值-----------------//
	const char* str7 = "12e";
	PrintResult(str7);

	const char* str8 = "1a3.14";
	PrintResult(str8);

	const char* str9 = "1.2.3";
	PrintResult(str9);

	const char* str10 = "+-5";
	PrintResult(str10);

	const char* str11 = "12e+5.4";
	PrintResult(str11);

	return 0;
}