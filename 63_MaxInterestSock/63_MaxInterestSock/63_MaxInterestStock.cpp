//==================================================================
// 《剑指Offer》代码
//==================================================================

// 面试题63：股票的最大利润
// 题目：假设把某股票的价格按照时间先后顺序存储在数组中，请问买卖交易该股
// 票可能获得的利润是多少？例如一只股票在某些时间节点的价格为{9, 11, 8, 5,
// 7, 12, 16, 14}。如果我们能在价格为5的时候买入并在价格为16时卖出，则能
// 收获最大的利润11。

#include <iostream>
#include <assert.h>
using namespace std;

//******************************************************************//
//--------------------------求最大利润函数--------------------------//
//******************************************************************//
int MaxInterest(int* values, int length)
{
	assert(values != nullptr && length > 1);
	int min = values[0];				//保存当前元素之前的所有元素的最小值
	int diff = values[1] - min;			//保存以当前元素卖出时的最大利润
	for (int i = 1; i < length; i++)	//遍历数组中的每一个元素
	{
		min = (values[i - 1] < min) ? values[i - 1] : min;			//更新min和diff
		diff = (values[i] - min > diff) ? values[i] - min : diff;
	}
	return diff;
}

//******************************************************************//
//------------------------------主函数------------------------------//
//******************************************************************//
int main()
{
	const int length = 8;
	int values[length] = { 9,11,8,5,7,12,16,14 };
	cout << "最大利润为：" << MaxInterest(values, length) << endl;
}