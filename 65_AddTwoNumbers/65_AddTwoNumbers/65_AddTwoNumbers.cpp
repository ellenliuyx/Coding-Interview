//==================================================================
// 《剑指Offer》代码
//==================================================================

// 面试题65：不用加减乘除做加法
// 题目：写一个函数，求两个整数之和，要求在函数体内不得使用＋、－、×、÷
// 四则运算符号。

#include <iostream>
using namespace std;

//************************************************************************//
//----------用异或（^）、位与（&）和左移（<<）运算符实现两数相加----------//
//************************************************************************//
int Add(int num1, int num2)
{
	int sum, carry;
	do
	{
		sum = num1 ^ num2;				//按位异或求不考虑进位的和
		carry = (num1 & num2) << 1;		//按位与并左移求进位
		num1 = sum;					
		num2 = carry;
	} while (num2 != 0);				//若进位非0，则继续讲和与进位相加

	return num1;
}

//************************************************************************//
//-----------------------测试函数1：两一位整数相加------------------------//
//************************************************************************//
void Test1()
{
	int num1 = 2;
	int num2 = 3;
	cout << num1 << " + " << num2 << " = " << Add(num1, num2) << endl;
}

//************************************************************************//
//-----------------------测试函数2：两二位整数相加------------------------//
//************************************************************************//
void Test2()
{
	int num1 = 57;
	int num2 = 83;
	cout << num1 << " + " << num2 << " = " << Add(num1, num2) << endl;
}

//************************************************************************//
//-----------------------测试函数3：负数与正数相加------------------------//
//************************************************************************//
void Test3()
{
	int num1 = -4536;
	int num2 = 85279;
	cout << num1 << " + " << num2 << " = " << Add(num1, num2) << endl;
}

//************************************************************************//
//---------------------------------主函数---------------------------------//
//************************************************************************//
int main()
{
	Test1();
	Test2();
	Test3();

	return 0;
}