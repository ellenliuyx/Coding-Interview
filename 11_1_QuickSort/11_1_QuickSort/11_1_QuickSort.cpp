//==================================================================
// 《剑指Offer》代码
//==================================================================

// 面试题11-1：快速排序的实现

#include <iostream>
#include <exception>
using namespace std;

//************************************************************************//
//-------------------------------打印数组元素-----------------------------//
//************************************************************************//
void PrintArray(int array[], int length)
{
	for (int i = 0; i < length; i++)
	{
		cout << array[i] << " ";
	}
	cout << endl;
}


//************************************************************************//
//-------------------------------单趟快速排序-----------------------------//
//************************************************************************//
int QuickPass(int array[], int low, int high)
{
	//将数组的第一个元素作为枢轴
	bool flag = false;		//标志位，用来区分是low指针右移还是high指针左移，一开始为high指针左移
	while (low < high)		//low指针和high指针未重合
	{
		if (array[low] <= array[high])		//若low处元素小于等于high处元素
		{
			if (!flag)						//根据标志位移动指针
				high--;
			else		
				low++;
			continue;						//跳出本次循环
		}
		swap(array[low], array[high]);		//若low处元素大于high处元素，则交换
		flag = !flag;						//标志位翻转
	}
	//PrintArray(array, 8);
	return low;				//low指针和high指针重合时，返回重合位置（枢轴位置）
}

//************************************************************************//
//------------------------------快速排序全过程----------------------------//
//************************************************************************//
void QuickSort(int array[], int low, int high)
{
	if (array == nullptr)			//非法输入
	{
		cout << "Invalid input!" << endl;
		throw new exception("Invalid input!");
	}
	if (low == high)				//数组只有一个元素时，函数直接退出
		return;

	int index = QuickPass(array, low, high);	//找出数轴元素在一次快速排序后的位置
	if (index > low)							//以枢轴为界，分别快排左右两个子数组
		QuickSort(array, low, index - 1);
	if (index < high)	
		QuickSort(array, index + 1, high);
}

//************************************************************************//
//----------------------------------主函数--------------------------------//
//************************************************************************//
int main()
{
	//----------------测试用例1：空数组-----------------//
	/*int length = 0;
	int * array = NULL;*/
	
	//---------------测试用例2：倒序数组----------------//
	int length = 8;
	int array[8] = { 8,7,6,5,4,3,2,1 };

	//--------------测试用例3：多元素数组---------------//
	/*int length = 18;
	int array[18] = { 73,48,23,62,4,35,52,12,89,29,77,55,9,14,70,35,66,98 }*/;
	

	cout << "初始序列为：";
	PrintArray(array, length);

	QuickSort(array, 0, length-1);
	
	cout << "快速排序结果为：";
	PrintArray(array, length);

	return 0;
}