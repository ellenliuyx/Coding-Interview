//==================================================================
// 《剑指Offer》代码
//==================================================================

// 面试题67：把字符串转换成整数
// 题目：请你写一个函数StrToInt，实现把字符串转换成整数这个功能。当然，不
// 能使用atoi或者其他类似的库函数。

#include <iostream>
#include <assert.h>
#include <exception>
using namespace std;

//************************************************************************//
//----------------------------字符串转整数函数----------------------------//
//************************************************************************//
int StrToInt(const char* str)
{
	assert(str != nullptr && *str != '\0');		//空指针和空字符串的非法输入

	long long num = 0;			//此处的num必须为longlong形，否则无法判断是否超出int的范围限制
	bool signal = true;			//符号位，true为+，false为-
	if (*str == '+')
	{
		str++;
	}
	if (*str == '-')
	{
		str++;
		signal = false;
	}
	while (*str != '\0')
	{
		if (*str >= '0' && *str <= '9')		//判断某一位是否为数字
		{
			num = num * 10 + (signal ? 1 : -1) * (*str - '0');

			//判断此时数字是否超过int的范围限制
			if ((signal && num > 0x7FFFFFFF) || (!signal && num < (signed int)0x80000000))
			{
				throw new exception("The number is out of range!");
			}
		}
		else
		{
			throw new exception("The input is not a number!");
		}
		str++;
	}
	return (int)num;
}

//************************************************************************//
//--------------------------------测试函数--------------------------------//
//************************************************************************//
void Test(const char* str)
{
	cout << StrToInt(str) << endl;
}

//************************************************************************//
//---------------------------------主函数---------------------------------//
//************************************************************************//
int main()
{
	//Test(nullptr);

	//Test("");

	Test("123");

	Test("+123");

	Test("-123");

	//Test("1a33");

	Test("+0");

	Test("-0");
	
	Test("+2147483647");	//有效的最大正整数, 0x7FFFFFFF

	//Test("+2147483648");

	Test("-2147483648");	//有效的最小负整数, 0x80000000

	//Test("-2147483649");	

	Test("+");

	Test("-");

	return 0;
}